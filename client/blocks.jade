template(name='comments_edit')
    .ui.header comments
template(name='comments_view')
    .ui.fluid.icon.input
        i.comment.icon
        input.add_comment(type='text' placeholder='comment...')
    .ui.comments
        each doc_comments
            .comment
                .content
                    .header #{body}
                    .meta #{when}
                    .actions
                        i.thumbs.up.link.icon
                        i.remove.link.remove_comment.icon

template(name='follow_view')
    .ui.secondary.segment
        .ui.header
            i.bell.grey.outline.icon
            |Follow
        +user_list_toggle key='follower_ids' add_icon='bell' remove_icon='bell slash' add_label='Follow' remove_label='Unfollow' color='blue' big=true


template(name='user_list_info')
    .item
        |#{user.profile.name}
        // |#{username} #{emails[0].address}




template(name='user_info')
    |#{user.profile.name}


template(name='role_editor')
    each roles
        .ui.circular.button #{this}

template(name='author_info')
    .ui.small.grey.header #{author.username}

template(name='creation_info')
    .ui.small.grey.header #{when}


template(name='user_list_toggle')
    .ui.toggle.icon.circular.button(class=user_list_toggle_class title=add_label)
        if in_list
            i.icon(class="#{remove_icon} #{color}")
        else
            i.icon(class=add_icon)
        // if big
        //     if in_list
        //         |#{remove_label}
        //     else
        //         |#{add_label}
    each list_users
        +user_info


template(name='voting_view')
    if parent.points
        strong #{parent.points}
    .ui.icon.circular.button.upvote
        i.thumbs.up.icon(class=upvote_class)
    each upvoter_ids
        +user_info
    .ui.icon.circular.button.downvote
        i.thumbs.down.icon(class=downvote_class)
    each downvoter_ids
        +user_info



template(name='view_button')
    a.ui.icon.circular.button.view(title='view' href="/view/#{_id}")
        i.play.icon
        
        
template(name='clone_button')
    a.ui.icon.circular.button.clone_doc(title='clone' href="#")
        i.clone.icon

template(name='detect')
    .ui.icon.circular.button.detect_fields
        i.dna.icon



template(name='remove_button')
    a.ui.icon.circular.button.remove(title='remove')
        i.remove.icon

template(name='add_button')
    a.ui.icon.circular.button.add(title='add')
        i.plus.icon
        |#{type}



template(name='edit_button')
    if currentUser
        a.ui.icon.circular.button.edit(title='edit' href="/edit/#{_id}")
            i.pencil.icon


template(name='save_button')
    a.ui.icon.fluid.circular.button.save(title='save' href="/view/#{_id}")
        i.checkmark.icon


template(name='toggle_button')
    .ui.icon.toggle.circular.button(title=label)
        i.icon(class=icon)
    each selected
        |#{username}


template(name='view_user_button')
    .ui.icon.view_user.circular.button.view(title="view #{username}")
        i.play.icon


template(name='add_type_button')
    .ui.icon.circular.button.add(title="add #{type}")
        i.plus.icon
        |#{type}




template(name='toggle_friend')
    if is_friend
        .ui.grey.animated.fade.button.remove_friend
            .visible.content
                |friends
            .hidden.content
                i.minus.icon
    else
        .ui.button.button.add_friend
            |+ friend
        
        
template(name='ownership_edit')
    .ui.header 
        | ownership
template(name='ownership_view')
    .ui.header 
        | ownership
    .content
        #make_author_owner.ui.button make author owner
        .ui.list
            each ownership
                .item user id: #{user_id} #{percent}
        .ui.header your ownership
        if has_ownership
            |#{my_ownership} %
            #offer_ownership.ui.button offer ownership
        .ui.header offers
        .ui.header transactions
        