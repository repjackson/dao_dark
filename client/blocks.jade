template(name='doc_matches')
    .ui.fluid.styled.accordion
        .title 
            |top doc matches (#{top_doc_matches.length})
            i.dropdown.icon
            if currentUser
                #compute_doc_matches.ui.icon.button(data-tooltip='Compute Matches')
                    i.refresh.icon
        .content.match_content
            if top_doc_matches
                .ui.relaxed.divided.items
                    each top_doc_matches
                        +doc_match
                        
                        
template(name='published')
    div
        if can_edit
            #publish.ui.icon.compact.button(data-tooltip='published' class=published_class)
                i.eye.icon
            #publish_anonymously.ui.icon.compact.button(data-tooltip='anonymous' class=published_anonymously_class)
                i.eye.slash.icon
            #unpublish.ui.icon.compact.button(data-tooltip='private' class=private_class)
                i.unlock.icon  
  
                                        
template(name='doc_match')                    
    .item 
        .content
            .description
                |intersection tags (#{intersection_tags_count})
                each intersection_tags
                    .ui.label #{this}
            .description
                | doc tags
                each tags
                    .ui.small.label #{this}
            // .description
            //     |#{match_doc.type} entry by
            //     img.ui.avatar.image(src="{{c.url match_doc.author.profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
            //     | #{match_doc.author.name}
            .title
                i.dropdown.icon
                |content 
            .content
                |!{match_doc.content}
            .extra
                +view_full_button match_doc


template(name='response_list')
    .ui.dividing.inverted.header 
        |#{child_count} Responses
    .ui.segments
        each responses
            .ui.segment
                .content
                    .description
                        |!{content}
                        |#{text}
                        .meta
                            each tags
                                .ui.label #{this}
                .content
                    +author_info
                    |#{when}
                    +thanks_button
                    +respond_button
                    .floated.right
                        +view_full_button
                        
template(name='upvoted_list')
    .ui.header upvoters
    .ui.list
        each upvoted_users
            .content
                .description
                    |#{name}
                    .meta
                        each tags
                            .ui.label #{this}




template(name='author_info')
    if is_anonymous
        |by anonymous
    else
        if is_private
            i.large.lock.icon
        | by 
        with author
            if profile.image_id
                img.ui.avatar.spaced.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
            |&nbsp;
            a(href="/u/#{username}") #{name} 
            +staus_indicator



template(name='toggle_friend')
    if currentUser
        if is_friend
            #remove_friend.ui.button
                i.minus.icon
                |unfriend
        else
            #add_friend.ui.button
                i.plus.icon
                |friend


template(name='dev_footer')
    .ui.inverted.segment
        .ui.horizontal.dividing.header 
            |DEV
            .ui.horizontal.list
                .item
                    a(href='/view/3qLXqhMDmxxZvh3tA') tasks
                .item
                    a(href='/view/z3fPCMJnhCLKs2kKK') facet

        with doc
            if parent_id
                .ui.segment
                    a.ui.header(href="/view/#{doc.parent_id}") 
                        +icon48 name=parent.icon_class
                        |Parent: #{parent.title}
            +edit_text_field key='title'
            +edit_text_field key='type'
            +edit_text_field key='template'
            +edit_text_field key='icon_class'
            // +edit_number
            +edit_array_field key='tags' icon='hashtag'
            +published
            // +edit_completion_type
            #create_child.ui.button create child
            unless parent_id
                #create_parent.ui.button create parent
            #move_above_parent.ui.button move above parent
            #toggle_child_docs.ui.button toggle child docs
            // #trickle_down.ui.button run trickle_down
            if show_child_docs
                +child_docs
                
template(name='parent_link')
//     with parent
//         a.ui.white.inverted.circular.button(href="/view/#{_id}") 
//             if icon_class
//                 +icon48 name=icon_class classes='avatar'
//             else
//                 +icon48 name='sort-up' classes='avatar'
//             // if number
//             //     |#{number}:
//             |#{title}
                
                
template(name='edit_button')
//     if can_edit
//         // +call_watson
//         a.ui.icon.button(href="/edit/#{_id}")
//             i.pencil.icon
                
template(name='parent_doc_segment')
//     .ui.secondary.segment
//         .ui.header
//             +icon48 name='response' classes='avatar'
//             |In response to...
//         +view_full_button
//         with parent
//             .ui.segment
//                 +view_array_field key='tags'
//                 .large130 !{content}
//             +author_info
//             |#{when}
                
                