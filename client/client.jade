head
    title DAO
    meta(name='viewport', content='user-scalable=no, initial-scale=1.0, maximum-scale=1.0, width=device-width')
    meta(name="theme-color", content="#ffffff")
    link(rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Ubuntu")
    link(rel="stylesheet" href="https://use.fontawesome.com/releases/v5.5.0/css/all.css" integrity="sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU" crossorigin="anonymous")
    // link(href="//cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet")



body
    +home


template(name='home')
    .ui.inverted.top.fixed.menu
        .icon.item
            i.fas.fa-yin-yang.fa-2x
        .item
            +loginButtons
        .item.create_delta
            i.plus.icon
            | Session
        each my_deltas
            a.item.select_delta 1 #{title}
        .item
            .ui.transparent.input.item
                input#in(type='text' placeholder='search')
        if currentUser
            a.item.add_doc
                i.plus.icon
        .right.menu
            .item
                if currentUser
                    i.user.icon
                    | #{currentUser.username}
                else
                    i.sign.in.alternate.icon
    .ui.stackable.padded.grid
        .row
            .six.wide.column.scrolling
                if delta
                    .ui.button.delete_delta
                        i.remove.link.icon
                    .ui.button.print_delta
                        i.code.link.icon
                    .ui.button.recalc
                        i.refresh.link.icon
                each delta.facets
                    +facet
                    div
            .ten.wide.column.scrolling
                with delta.result
                    if delta.editing
                        +edit
                    else
                        +result
    +footer


template(name='edit')
    with editing_doc
        .ui.header Edit #{_id}
        .ui.button.add_field
            i.plus.icon
            | Field
        .ui.button.detect_fields
            i.refresh.icon
            | Detect Fields
        .ui.button.save
            i.green.checkmark.icon
            |Save
        div
        each fields
            .ui.button.set_editing_field #{label}
        +field
    
    
template(name='field')
    .ui.secondary.segment
        with field_object
            .ui.form
                .field
                    .two.fields
                        .field
                            label Label
                            input.label(type='text' value=label)
                        .field
                            label Key
                            input.key(type='text' value=key)
                .field
                    label Field Type
                    +set_field_key_value key='field_type' value='array'
                    +set_field_key_value key='field_type' value='string'
                    +set_field_key_value key='field_type' value='boolean'
                    +set_field_key_value key='field_type' value='number'
                    +set_field_key_value key='field_type' value='html'
                    +set_field_key_value key='field_type' value='markdown'
                    +set_field_key_value key='field_type' value='html'
                    +set_field_key_value key='field_type' value='html'
                    +set_field_key_value key='field_type' value='html'
                    +set_field_key_value key='field_type' value='html'
                .field
                    +Template.dynamic template=field_edit_template
                .field
                    label Value
                    input.value(type='text' value=field_value)
                .field
                    .ui.icon.button.delete_field
                        i.remove.icon


template(name='set_field_key_value')
    .ui.button.set_field_key_value(class=field_key_class)
        |#{value}
    

template(name='result')
    .ui.button.edit
        i.pencil.icon
        | Edit
    .ui.list
        each fields
            .item
                strong #{label}
                div Field Type #{type}
                if is_html
                    |!{value}
                else if is_number
                    .ui.header ##{value}
                    // strong time
                    // |{{ from_now value }}
                else if is_array
                    each value
                        .ui.grey.label #{this}
                else
                    |#{value} 
    div
        .ui.button
            i.thumbs.up.icon
        .ui.button
            i.thumbs.down.icon
        .ui.button
            i.chat.icon
        .ui.button
            i.eye.icon
        .ui.button
            i.bookmark.icon


template(name='facet')
    // .ui.secondary.segment
    .ui.small.header #{key}
    // each filters
    //     .unselect.ui.blue.button #{this}
    
    each res
        .ui.compact.button.toggle_selection(class=toggle_value_class)
            strong #{name}
            // small #{count}
            
            
            
template(name='footer')
    .ui.bottom.fixed.inverted.menu
        .ui.center.aligned.grey.small.header
            .item
                i.creative.commons.outline.icon
                | 2018 Data Analytics Organization



template(name='role_switcher')
    each role_docs
        .change_role.ui.button(class=role_button_class)
            if icon
                i.icon
                    +icon name=icon
            |#{title}
            