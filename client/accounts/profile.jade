template(name='profile_layout')
    .layout.context(class=invert_class)
        +topnav
        .ui.bottom.attached.basic.segment.pushable
            +leftbar
            // +topbar
            // +rightbar
            .pusher
                #main
                    with user_from_username_param
                        .ui.padded.stackable.grid
                            .row
                                .four.wide.column
                                    .field
                                        if image_id
                                            a.item(href="/t/#{ct.slug}/u/#{user_from_username_param.username}/about")
                                                img.ui.medium.image(src="{{c.url image_id height=400 crop='limit'}}")
                                    // if current_user
                                    if is_admin
                                        .ui.vertical.fluid.menu
                                            a.item(href="/u/#{user_from_username_param.username}/edit")
                                                i.settings.icon
                                                | Settings
                                    // .ui.vertical.fluid.menu
                                    //     each user_schemas
                                    //         a.item.set_delta_schema(href="/u/#{user_from_username_param.username}/s/#{slug}" class="{{isActiveRoute regex=group}}")
                                    //             i.icon(class=icon)
                                    //             .content    
                                    //                 .header
                                    //                     |#{plural}
                                    .ui.vertical.fluid.menu
                                        a.item(href="/u/#{user_from_username_param.username}/about" class="{{isActiveRoute regex='user_about'}}")
                                            i.info.icon
                                            .content    
                                                .header
                                                    |About
                                        a.item(href="/u/#{user_from_username_param.username}/messages" class="{{isActiveRoute regex='user_messages'}}")
                                            i.mail.icon
                                            .content    
                                                .header
                                                    |Messages
                                        a.item(href="/u/#{user_from_username_param.username}/notifications" class="{{isActiveRoute regex='user_messages'}}")
                                            i.bullhorn.icon
                                            .content    
                                                .header
                                                    |Notifications
                                        a.item(href="/u/#{user_from_username_param.username}/chat" class="{{isActiveRoute regex='user_chat'}}")
                                            i.chat.icon
                                            .content    
                                                .header
                                                    |Chat
                                        a.item(href="/u/#{user_from_username_param.username}/stripe" class="{{isActiveRoute regex='user_stripe'}}")
                                            i.stripe.icon
                                            .content    
                                                .header
                                                    |Stripe
                                        a.item(href="/u/#{user_from_username_param.username}/tags" class="{{isActiveRoute regex='user_tags'}}")
                                            i.tags.icon
                                            .content    
                                                .header
                                                    |Tags
                                        a.item(href="/u/#{user_from_username_param.username}/contact" class="{{isActiveRoute regex='user_contact'}}")
                                            i.phone.icon
                                            .content    
                                                .header
                                                    |Contact
                                    if is_user
                                        .ui.vertical.fluid.menu
                                            a.item.logout(href='#')
                                                i.sign.out.icon
                                                |Log Out
                                    .ui.segment
                                        // if TotalDonation
                                        //     .ui.small.header
                                        //         i.get.icon
                                        //         |$#{TotalDonation} Made
                                        // // if titheTotalGive
                                        // .ui.small.header
                                        //     i.donate.icon
                                        //     |$#{titheTotalGive} Given
                                        .ui.small.header
                                            i.heartbeat.icon
                                            |#{user.points} Karma
                                        .ui.header 
                                            i.user.shield.icon
                                            |Roles
                                        each roles
                                            .ui.small.header #{this}
                                    // each codeDetail
                                    //     .media-body
                                    //         h5
                                    //             span.font-bold
                                    //                 b #{user.profile.name}
                                    //             | donated 
                                    //             b $#{this.giveAmount}
                                    //         small.text-muted #{this.date}
                                    //     .panel-body
                                    //         a(href="/#{this.code}" target='_blank')
                                    //             h4 #{this.campaign}
                                    //         img.img-responsive(src='#{this.customPage.header_image}')
                                    //         p
                                    //             | !{this.customPage.textContent}
                                    // iframe#ravi039s-immediate-intestinal-surgery.gfm-media-widget(image='1' coinfo='1' width='100%' height='100%' frameborder='0')
                                    // script(src='//funds.gofundme.com/js/5.0/media-widget.js')
                                .twelve.wide.column.scrolling
                                    h1.ui.center.aligned.header
                                        | #{user.first_name}
                                        | #{user.last_name}
                                        | #{user.username}
                                    +yield
                                    // +churchDashboard
            +footer
template(name='user_section')
    +delta
    // +Template.dynamic template=user_section_template

template(name='user_about')
    .ui.padded.stackable.grid
        .eight.wide.column
            .ui.list
                .ui.item First Name 
                    strong #{first_name}
                .ui.item Last Name 
                    strong #{last_name}
                // .ui.item Address 
                //     strong #{address}
                // .ui.item Unit # 
                //     strong #{apt_number}
                // .ui.item Building # 
                //     strong #{building_number}
                // .ui.item Start Date 
                //     strong #{start_date}
                // .ui.item Lease Expiration 
                //     strong #{lease_expiration}
                .ui.item Telephone 
                    strong #{telephone}
                .ui.item Email 
                    strong #{email}
                .ui.item Owner 
                    strong #{owner}
        .eight.wide.column
            +user_wall
    // img.ui.fluid.rounded.image(src="{{c.url profile.banner_image_id width=1000 height=300 crop='crop'}}")
    // .profile-banner-container
    +user_feed
    .ui.inline.header
        i.fire.icon
        |Group Memberships
    each tribes
        a.ui.button(href="/t/#{this}") 
            i.external.icon
            |#{this}
    .ui.small.inline.header 
        i.linkify.icon
        |Link
    a(href=profile.website target='_blank') #{profile.website}
    +textarea_view key='bio' label='Bio' collection='users' icon='align-left'
    +user_bookmarks    
    if current_user
        +role_switcher
        +site_switcher
    +user_tags
    





template(name='user_blog')
    .ui.secondary.segment
        .ui.header
            i.contact.icon
            |Blog
        .ui.list
            if profile.phone
                .item
                    a(href="tel:#{profile.phone}") 
                        i.phone.icon
                        |#{profile.phone}
            if profile.website
                .item 
                    a(href=profile.website target='_blank') 
                        |#{profile.website}
                        i.external.icon
            .item Created {{ from_now createdAt }}
        .ui.list
            .item #{profile.address.street}
            .item #{profile.address.city}
            .item #{profile.address.state}
            .item #{profile.address.zip}


template(name='user_people')
    +user_following
    +follow_user

template(name='user_feed')
    .ui.secondary.segment
        .ui.header 
            i.activity.icon
            |Activity Feed
        if current_user
            .ui.fluid.input
                input(type='text' placeholder='Share something...')
                
template(name='user_bookmarks')
    .ui.secondary.segment
        .ui.header 
            i.bookmark.icon
            |Bookmarks
                
template(name='user_tasks')
    .ui.secondary.segment
        .ui.header 
            i.tasks.icon
            |Tasks
                
template(name='user_unread')
    .ui.secondary.segment
        .ui.header 
            i.new.icon
            |Unread Messages
                
                
    
template(name='follow_user')    
    .ui.secondary.segment
        unless current_user
            a.toggle_follow_user(href='#' title='Follow User')
                i.renew.icon
        else
            i.renew.icon
        |Followed By
        +user_array_list user=user_from_username_param array='followed_by_ids'
            
            
template(name='user_array_list')
    .ui.list
        each users
            .item
                +user_info
            
            
template(name='user_following')    
    .ui.secondary.segment
        .ui.header 
            i.human.icon
            |Following
        +user_array_list user=user_from_username_param array='following_ids'
      
                
            
template(name='role_switcher')
    i.user.shield.icon(title='Role Switcher')
    if is_eric
        +user_array_element_toggle key='roles' value='dev' user=currentUser
    +user_array_element_toggle key='roles' value='admin' user=currentUser
    +user_array_element_toggle key='roles' value='user' user=currentUser


template(name='site_switcher')
    .ui.secondary.segment
        .ui.header 
            i.clone.icon
            |Site Switcher
        each my_sites
            +user_string_toggle key='current_site' value=slug  
            
template(name='user_array_element_toggle')
    .ui.button.toggle_element(class=user_array_element_toggle_class)
        |#{value}

template(name='user_string_toggle')
    .ui.button.toggle_element(class=user_string_element_toggle_class)
        |#{value}



template(name='user_wall')
    .ui.header Wall
    if currentUser
        .ui.fluid.icon.input
            i.plus.icon
            input.add_wall_post(type='text' placeholder='Add Note...')
    each user_posts
        .ui.item
            |#{body}
