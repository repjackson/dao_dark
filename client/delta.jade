template(name='delta')
    with schema
        .ui.stackable.grid
            .row
                .column.padleft.scrolling(class=delta_left_column_class)
                    a.ui.right.corner.label.move_left
                        i.left.chevron.link.icon
                    .ui.center.aligned.header
                        i.icon(class=icon)
                        | #{plural}
                    .ui.small.center.aligned.header #{body}
                    unless is_loading
                        if can_add
                            .ui.icon.button.add_type_doc(title="Add #{title}")
                                i.plus.icon
                                |Add #{title}
                        if can_edit
                            +edit_button
                            // .ui.button.edit_schema
                            //     i.cog.icon
                            //     | Configure #{plural}
                        // .ui.divider
                        // // each sessions
                        // //     .ui.icon.large.button.select_session(class=session_selector_class title='select session')
                        // //         i.play.icon
                                
                        if current_delta
                            div
                            .ui.icon.button.print_delta(title='Print Session Doc')
                                i.code.icon
                                // |Print Session
                            .ui.reset.icon.button(title='Reload Session')
                                i.refresh.icon
                                // |Reload Session
                            .ui.delete_delta.icon.button(title='Delete Session')
                                i.trash.icon
                                // |Delete Session
                        else
                            .create_delta.ui.button.pointer(title='new session')
                                i.plus.icon
                                |Create Session
                    // |did: #{session_delta_id}
                            
                    each current_delta.facets
                        +facet
                .column(class=delta_right_column_class)
                    a.ui.left.corner.label.move_right
                        i.right.chevron.link.pointer.icon
                    .ui.horizontal.spaced.list
                        .item
                            +set_page_size value=10
                            +set_page_size value=20
                            +set_page_size value=50
                        .item
                            if multiple_pages
                                .ui.label
                                    | Page #{delta.current_page}/#{delta.page_amount}
                        .item
                                | #{delta.total} Results
                        .item
                            if show_page_down
                                .ui.icon.button.page_down(title='Previous Page')
                                    i.left.chevron.icon
                            if show_page_up
                                .ui.icon.button.page_up(title='Next Page')
                                    i.right.chevron.icon
                        .item
                            +set_delta_key key='view' value='grid' icon='clone'                                    
                            +set_delta_key key='view' value='table' icon='table'                                    
                        
                        .item
                            +toggle_delta_config key='minimize' title='Minimize' label='Minimize' icon='chevron up'
                        .item
                            .ui.disabled.button
                                i.sort.down.icon
                                |Sort By
                        .item
                            .ui.disabled.button
                                i.filter.icon
                                | Toggle Fields
                    // .ui.stackable.cards.scrolling(class=cards_class)
                    .ui.stackable.cards.scrolling
                        each current_delta.result_ids
                            +result





template(name='type_edit')
    with doc
        .ui.stackable.padded.grid
            .centered.row
                .four.wide.center.aligned.column
                    +save_button
                .eight.wide.center.aligned.column
                    i.pencil.large.icon
                    .ui.inline.header
                        if icon
                            i.icon(class=icon)
                        |#{title}
                    .ui.small.header Type: #{type}
                .four.wide.center.aligned.column
                    +remove_button
            .row
                .six.wide.column
                    each small_bricks
                        +Template.dynamic template=edit_template 
                .ten.wide.column
                    each big_bricks
                        +Template.dynamic template=edit_template 
                        // .ui.header #{key} [#{field}] #{label}


template(name='type_view')
    with doc
        .ui.stackable.padded.grid
            .row
                .sixteen.wide.column
                    .ui.breadcrumb
                        a.section(href="/t/#{ct.slug}")
                            .ui.button
                                i.dashboard.icon
                                |#{ct.title}
                        .divider
                            i.chevron.right.icon
                        a.section(href="/t/#{ct.slug}/s/#{type}" title=schema.plural)
                            .ui.button
                                i.icon(class=schema.icon)
                                |#{schema.plural}
                        .divider
                            i.chevron.right.icon
                        .active.section
                            if icon
                                i.icon(class=icon)
                            if title
                                |#{title}
                            else
                                |View #{type}
            .row
                .four.wide.column
                    // .ui.header
                    //     a.ui.icon.button(href="/s/#{type}" title=plural)
                    //         i.chevron.left.icon
                    //     |View #{type}
                    if is_author
                        +edit_button
                    each schema.actions
                        +Template.dynamic template=this data=doc
                    +user_list_toggle key='bookmark_ids' icon='bookmark' label='Bookmark' color='red'
                .twelve.wide.column
                    .ui.segment
                        .ui.header
                            if icon
                                i.icon(class=icon)
                            |#{title}
                        .ui.list
                            // each schema.field_templates
                            //     with field_template_doc
                            //         +Template.dynamic template=view_template
                            each bricks
                                .item
                                    +Template.dynamic template=view_template 
                    div
                    +comments
                    
                    

template(name='facet')
    if filtering_res
        .ui.accordion
            .active.title
                .ui.small.header 
                    if icon
                        i.icon(class=icon)
                    |#{label}
            .active.content
                // .ui.transparent.left.icon.small.input
                //     i.search.icon
                //     input.add_filter(type='text' placeholder='search')
                // i.dropdown.icon
                // each filters
                //     .unselect.ui.grey.button #{this}
                each filtering_res
                    if name
                        .selector.ui.button.toggle_selection(class=toggle_value_class title=count)
                            | #{name}
                            small #{count}
                    else
                        .selector.ui.button.toggle_selection(class=toggle_value_class title=count)
                            strong [null]
                            small #{count}



template(name='toggle_delta_config')
    if boolean_true
        .ui.grey.active.icon.button.disable_key(title=label)
            i.icon(class=icon)
            // | #{label}
    else
        .ui.icon.button.enable_key(title=label)
            i.icon(class=icon)
            // | #{label}



template(name='set_page_size')
    .ui.icon.button.set_page_size(class=page_size_class title='Page Size')
        .middle.aligned #{value}

template(name='set_delta_key')
    .ui.icon.button.set_delta_key(class=set_delta_key_class)
        if icon
            i.icon(class=icon)
        // |#{label}



template(name='result')
    with result 
        .ui.black.result.card(class="{{#if is_loading}}loading{{/if}}")
            .content
                a.ui.header(href="/t/#{ct}/s/#{type}/#{_id}/view")
                    if logo_id
                        img.ui.avatar.image(src="{{c.url logo_id width=100 height=100 gravity='face' crop='fill'}}")
                    else if icon
                        i.icon(class=icon)
                    |#{title}
                .description
                    // each schema.field_templates
                    //     with field_template_doc
                    //         +Template.dynamic template=view_template
                    each bricks
                        +Template.dynamic template=view_template 
                .extra
                    // +user_list_toggle key='bookmark_ids' icon='bookmark' label='Bookmark' color='red'
                    if is_author
                        +edit_button
                    +view_button
                    each schema.actions
                        +Template.dynamic template=this data=..
                +author_info
                +creation_info

    
    //     each _keys
    //         // .ui.label #{this}
    //         +key_view
    //     if visual_classes
    //         +visual_classes
    //     if analyzed_text
    //         |#{nl2br analyzed_text}

    //     +view_button
    //     +edit_button
    // .ui.divider

    
                    