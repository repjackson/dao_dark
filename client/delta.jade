template(name='delta')
    with current_schema
        .ui.stackable.grid
            .row
                // .twelve.wide.column.padleft.scrolling(class=delta_left_column_class)
                .four.wide.column.scrolling
                    .ui.center.aligned.header
                        if color_icon
                            +icolor name=color_icon
                        else
                            i.icon(class=icon)
                        | #{plural}
                    // .ui.small.center.aligned.header #{body}
                    unless is_loading
                        if can_add
                            .ui.icon.button.add_type_doc(title="Add #{title}")
                                i.plus.icon
                                //- +icolor name='plus' classes='ui avatar image'
                                //- |Add #{title}
                        if can_edit
                            //- +edit_button
                            .ui.icon.button.edit_schema
                                i.cog.icon
                                //- | Configure #{plural}
                        // .ui.divider
                        // // each sessions
                        // //     .ui.icon.button.select_session(class=session_selector_class title='select session')
                        // //         i.play.icon
                                
                        if current_delta
                            if is_dev
                                .ui.icon.button.print_delta(title='Print Session Doc')
                                    i.code.icon
                                    // |Print Session
                                .ui.reset.icon.button(title='Reload Session')
                                    i.refresh.icon
                                    // |Reload Session
                                .ui.delete_delta.icon.button(title='Delete Session')
                                    i.trash.icon
                                    // |Delete Session
                        else
                            .create_delta.ui.basic.button.pointer(title='new session')
                                i.plus.icon
                                |Create Session
                    // |did: #{session_delta_id}
                            
                    each current_delta.facets
                        +facet
                // .column(class=delta_right_column_class)
                .twelve.wide.column
                    // a.ui.left.corner.label.move_right
                    //     i.right.chevron.link.pointer.icon
                    // .ui.horizontal.spaced.list
                    //     .item
                    //         |View
                    //         +set_page_size value=10
                    //         +set_page_size value=20
                    //         +set_page_size value=50
                    //     .item
                    //         if multiple_pages
                    //             .ui.label
                    //                 | Page #{delta.current_page}/#{delta.page_amount}
                    //     .item
                    //             | #{delta.total} Results
                    //     .item
                    //         if show_page_down
                    //             .ui.icon.button.page_down(title='Previous Page')
                    //                 i.left.chevron.icon
                    //         if show_page_up
                    //             .ui.icon.button.page_up(title='Next Page')
                    //                 i.right.chevron.icon
                    //     .item
                    //         +set_delta_key key='view' value='grid' icon='clone'                                    
                    //         +set_delta_key key='view' value='table' icon='table'                                    
                    //     .item
                    //         +toggle_delta_config key='minimize' title='Minimize' label='Minimize' icon='chevron up'
                    //     .item
                    //         .ui.disabled.button
                    //             i.sort.down.icon
                    //             |Sort By
                    //     .item
                    //         .ui.disabled.button
                    //             i.filter.icon
                    //             | Toggle Fields
                    // .ui.stackable.grid.scrolling(class=result_grid_class)
                    .scrolling
                        each current_delta.result_ids
                            +delta_result
                //- .four.wide.column.scrolling
                //-     +events_column
                
template(name='events_column')
    .ui.accordion
        h4.active.title
            // +icolor name='edit-property' classes='ui inline image'
                // .ui.inline.dividing.header 
            i.rss.icon
            | Log
            i.dropdown.icon
        .active.content
            .ui.feed
                each log_events
                    .event
                        .label
                            img.ui.image(src="{{c.url object.image width=400 height=400 gravity='face' crop='fill'}}")
                        .content
                            .summary
                                |#{body}
                                .date
                                    |#{when}
                                if is_dev
                                    +remove_button



template(name='facet')
    div
    |&nbsp;
    //- if filtering_res
    .ui.inline.header 
        if icon
            i.small.grey.icon(class=icon)
        if label
            |#{label}
        else 
            |#{key}
    .ui.input
        input.add_filter(type='text' placeholder=key)
    //-     // i.grey.dropdown.icon
    //-         // i.dropdown.icon
    //-         // each filters
    //-         //     .unselect.ui.grey.button #{this}
    each filtering_res
        if name
            .selector.ui.compact.button.toggle_selection(class=toggle_value_class title=count)
                | #{name}
                //- small #{count}
        else
            .selector.ui.compact.button.toggle_selection(class=toggle_value_class title=count)
                strong [null]
                //- small #{count}

        // div
        // if icon
        //     i.grey.icon(class=icon)
        // .ui.small.inline.header 
        //     |#{label}
        // // .ui.transparent.left.icon.small.input
        // //     i.search.icon
        // //     input.add_filter(type='text' placeholder='search')
        // // i.dropdown.icon
        // // each filters
        // //     .unselect.ui.grey.button #{this}
        // each filtering_res
        //     if name
        //         .selector.ui.compact.button.toggle_selection(class=toggle_value_class title=count)
        //             | #{name}
        //             // small #{count}
        //     else
        //         .selector.ui.compact.button.toggle_selection(class=toggle_value_class title=count)
        //             strong [null]
        //         // small #{count}



template(name='toggle_delta_config')
    if boolean_true
        .ui.grey.active.icon.button.disable_key(title=label)
            i.icon(class=icon)
            // | #{label}
    else
        .ui.icon.button.enable_key(title=label)
            i.icon(class=icon)
            // | #{label}



template(name='delta_result')
    with result 
        unless is_loading
            .ui.result.basic.segment.two.column.stackable.grid
                .column.scrolling
                    a.ui.header(href="/view#{_id}")
                        each bricks
                            if header
                                +Template.dynamic template=view_template 
                        // |#{title}
                    .description
                        each small_bricks
                            unless header
                                +Template.dynamic template=view_template 
                    .description
                        each big_bricks
                            unless header
                                +Template.dynamic template=view_template 
                    .extra
                        // +user_list_toggle key='bookmark_ids' icon='bookmark' label='Bookmark' color='red'
                        if is_dev
                            +remove_button
                        if can_edit
                            a.ui.icon.big.button(href="/edit/#{_id}")
                                i.pencil.icon
                        a.ui.icon.big.button(href="/view/#{_id}")
                            i.eye.icon
                        each schema.actions
                            +Template.dynamic template=this data=..
                        +author_info
                        +creation_info

    
                    

template(name='type_edit')
    with doc
        .ui.stackable.padded.grid
            .centered.row
                .four.wide.column
                    .ui.header(title="Type: #{type}")
                        |#{title}
                    each bricks
                        if header
                            +Template.dynamic template=view_template 
                    // +ioffice name='pencil' classes='ui inline image'
                    div
                    +creation_info
                    a.ui.button(href="/view/#{_id}")
                        |alpha
                    a.ui.fluid.button(href="/s/#{type}/#{_id}/view")
                        i.checkmark.icon
                        |delta
                    +remove_button
                .twelve.wide.column
                    //- |#{type}
                    each small_bricks
                        +Template.dynamic template=edit_template 
                    each big_bricks
                        +Template.dynamic template=edit_template 
                        // .ui.header #{key} [#{field}] #{label}


template(name='type_view')
    with doc
        .ui.stackable.padded.grid
            .row
                .sixteen.wide.column
                    .ui.breadcrumb
                        a.section(href="/s/#{current_schema.slug}" title=current_schema.plural)
                            .ui.compact.small.button
                                if schema.color_icon
                                     +icolor name=schema.color_icon classes='ui mini inline image'
                                // else
                                // i.icon(class=current_schema.icon)
                                |#{current_schema.plural}
                        .divider
                            i.chevron.right.icon
                        .active.section
                            if icon
                                i.icon(class=icon)
                            if title
                                |#{title}
                            else
                                |view #{type}
            .row
                .four.wide.column
                    // .ui.header
                    //     a.ui.icon.button(href="/s/#{type}" title=plural)
                    //         i.chevron.left.icon
                    //     |View #{type}
                    if can_edit
                        a.ui.button(href="/edit/#{_id}")
                            i.pencil.icon
                    each schema.actions
                        +Template.dynamic template=this data=doc
                    // +user_list_toggle key='bookmark_ids' icon='bookmark' label='Bookmark' color='red'
                    +creation_info
                .twelve.wide.column
                    .ui.header
                        each bricks
                            if header
                                +Template.dynamic template=view_template 
                        // if icon
                        //     i.icon(class=icon)
                        // |#{title}
                    each bricks
                        unless header
                            .item
                                +Template.dynamic template=view_template 
                    div
                    +comments
                    if watson
                        +watson_view
                    
                    
