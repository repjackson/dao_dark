template(name='doc_sentiment') 
    // .ui.dividing.header 
    //     |sentiment
    // .ui.small.progress(data-percent=sentiment_score_percent class=sentiment_bar_class)
    //     .bar
    //     .progress
    //     .label
    |{{ to_percent doc_sentiment_score }}% &nbsp;
    if is_positive
        | positive
    else
        | negative

        // |#{doc_sentiment_label}
        // |#{sentiment_score_percent}



template(name='doc_emotion') 
    with watson.emotion.document.emotion
        .ui.list
            .item {{to_percent sadness}}% sadness 
            .item {{to_percent joy}}% yoy 
            .item {{to_percent fear}}% fear 
            .item {{to_percent disgust}}% disgust 
            .item {{to_percent anger}}% anger 
            
template(name='call_watson')
    #call_watson.ui.button 
        i.refresh.icon
        | language
        
        

template(name='call_visual_analysis')
    #call_visual.ui.button 
        i.image.icon
        |tag

template(name='keywords')
    .ui.styled.accordion
        .active.title
            |#{watson.keywords.length} watson tags
            i.dropdown.icon
        .active.content
            .ui.stackable.three.cards
                each watson.keywords
                    .ui.card
                        .content
                            h4
                                |#{text}
                            .meta
                                |{{ to_percent relevance }}% relevant
                            .meta
                                |sentiment: {{ to_percent sentiment.score }}%
                            .description
                                with emotion
                                    .ui.list
                                        .item {{ to_percent sadness }}% sadness
                                        .item {{ to_percent joy }}% joy 
                                        .item {{ to_percent fear }}% fear
                                        .item {{ to_percent disgust }}% disgust 
                                        .item {{ to_percent anger }}% anger 


template(name='entities')
    if watson.entities.length
        .ui.segment
            .ui.header 
                |#{watson.entities.length} entities
            .ui.list
                each watson.entities
                    .item
                        |#{type}: #{text}

template(name='concepts')
    if watson.concepts.length
        .ui.segment
            .ui.header 
                |#{watson.concepts.length} concepts
            .ui.list
            each watson.concepts
                .item
                    a(href=dbpedia_resource target='_blank') #{text}
                    | {{to_percent relevance}}%




template(name='categories')
    .ui.segment
        .ui.header 
            |#{watson.categories.length} categories
        .ui.list
            each watson.categories
                .item
                    strong #{label}
                    |{{ to_percent score }}%


template(name='semantic_roles')
    .ui.styled.accordion
        .title
            |#{watson.semantic_roles.length} semantic roles
        .content
            +jsonView(json=watson.semantic_roles)
            .ui.list
                .item subject: #{subject.text}
                .item sentence: #{sentence}
                .item object: #{object.text}
                .item action:
                
                each watson.semantic_roles
                    .item
                        strong #{label}
                        |{{ to_percent score }}%


template(name='relations')
    if watson.relations.length
        .ui.styled.accordion
            .title
                |#{watson.relations.length} relations
            .content    
                // +jsonView(json=watson.relations)
                .ui.segments
                    each watson.relations
                        .ui.segment
                            p #{sentence}
                            .ui.list
                                .item type #{type}
                                .item score: {{ to_percent score }}%
                                .item
                                    each arguments
                                        h4 argument text: #{text}
                                        // h5 argument location: #{location}
                                        each entities
                                            h5 entity type: #{type}
                                            h5 entity text: #{text}


template(name='personality')
    if personality
        .ui.styled.accordion
            .title
                h3
                    | #{author.first_name} personality 
                    i.dropdown.icon
            .content   
                each personality.personality
                    h4.ui.header
                        |#{name} {{ to_percent percentile }}%
                    .ui.list
                        each children
                            .item #{name} {{ to_percent percentile }}%
                .ui.header needs
                .ui.list
                    each personality.needs
                        .item #{name} {{ to_percent percentile }}%
                .ui.header Values
                .ui.list
                    each personality.values
                        .item #{name} {{ to_percent percentile }}%
                if personality.behavior
                    .title 
                        | behavior
                        i.dropdown.icon
                    .content
                        .ui.list
                            each personality.behavior
                                .item #{name} {{ to_percent percentage }}%
        // p not enough words to analyze author personality
    #call_personality.ui.icon.button(title='analyze personality')
        i.refresh.icon


template(name='consumption_preferences')
    if personality
        .ui.styled.accordion
            .title
                h3.ui.header
                    |#{author.first_name} preferences
                    i.dropdown.icon
            .content
                each personality.consumption_preferences
                    h3.ui.header #{name}
                    .ui.list
                        each consumption_preferences
                            if score
                                .item #{name}
                            else
                                .disabled.item #{name}
            // +jsonView(json=personality.consumption_preferences)



template(name='tone')
    .ui.styled.accordion
        .active.title 
            h3
                | tone
                i.dropdown.icon
        .active.content
            .ui.bulleted.list
                each tone.document_tone.tones
                    .item #{tone_id} {{ to_percent score }}%
            .ui.list
                each tone.sentences_tone
                    .item
                        strong #{sentence_id}: 
                        | #{text}
                        each tones
                            .ui.label #{tone_id} {{ to_percent score }}%
            i#call_tone.refresh.large.link.icon
                // +jsonView(json=tone)
